apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
    backstage.io/kubernetes-id: {{ .Values.backstageLabel }}
    {{- include "chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
      labels:
        backstage.io/kubernetes-id: {{ .Values.backstageLabel }}
        {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: backstage-app-config
          configMap:
            name: backstage-app-config
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      automountServiceAccountToken: true
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 30
            httpGet:
              path: /
              port: http
          readinessProbe:
            initialDelaySeconds: 30
            httpGet:
              path: /
              port: http
          command:
            - "node"
            - "packages/backend"
            - "--config"
            - "app-config.yaml"
            - "--config"
            - "app-config.production.yaml"
          env:
            {{- with (index .Values.ingress.hosts 0) }}
            - name: HOST
              value: https://{{ .host }}
            {{- end }}
{{/*            - name: AWS_ACCESS_KEY_ID*/}}
{{/*              valueFrom:*/}}
{{/*                secretKeyRef:*/}}
{{/*                  key: username*/}}
{{/*                  name: s3-read-secret*/}}
{{/*            - name: AWS_SECRET_ACCESS_KEY*/}}
{{/*              valueFrom:*/}}
{{/*                secretKeyRef:*/}}
{{/*                  key: password*/}}
{{/*                  name: s3-read-secret*/}}
            - name: AWS_REGION
              value: eu-central-1
          envFrom:
            - secretRef:
                name: backstage
          volumeMounts:
            - name: backstage-app-config
              mountPath: "app/app-config.production.yaml"
              subPath: app-config.production.yaml
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}


